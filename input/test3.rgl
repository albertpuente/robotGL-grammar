DEFINITIONS

    func abs x :
        if x < 0 then return -x else return x endif
    endfunc
    
    func distFrom x, y :
        dx = abs (x - getPosX)
        dy = abs (y - getPosY)
        if dx > dy then return dx else return dy endif
    endfunc
    
    func distBetween x, y, a, b :
        dx = abs (x - a)
        dy = abs (y - b)
        if dx > dy then return dx else return dy endif
    endfunc
    
    action goToStraight x, y :
        d = distFrom (x, y)
        face east
        if not detect front and distBetween (x, y, getPosX+1, getPosY) < d then
            face east
            moveForward 1
        endif
    endaction
    
    action bringBox x, y :
        mark x, y
        
        while distFrom (x, y) > 1 do
            goToStraight (x, y)
        wend
        
        faceToTheBox (getPosX, getPosY)
        
        pickObject
        
        while distFrom (10, 10) > 2 do
            goToStraight (x, y)
        wend
        
        releaseObject          
        
    endaction

ENDDEFINITIONS

BEGIN
    initMap 20
    initRobot 10, 10, 0
    
    bringBox (18, 2)
END
