
void rgl_buildMap() {
    exec( action(OBSTACLE, 0, 1) );
    exec( action(OBSTACLE, 0, 2) );
    exec( action(OBSTACLE, 0, 3) );
    exec( action(OBSTACLE, 0, 4) );
    exec( action(OBSTACLE, 0, 5) );
    exec( action(OBSTACLE, 1, 1) );
    exec( action(OBSTACLE, 1, 5) );
    exec( action(OBSTACLE, 2, 1) );
    exec( action(OBSTACLE, 2, 3) );
    exec( action(BOX, 2, 4) );
    exec( action(OBSTACLE, 2, 5) );
    exec( action(OBSTACLE, 3, 1) );
    exec( action(OBSTACLE, 3, 3) );
    exec( action(OBSTACLE, 3, 4) );
    exec( action(OBSTACLE, 3, 5) );
    exec( action(OBSTACLE, 5, 1) );
    exec( action(OBSTACLE, 5, 2) );
    exec( action(OBSTACLE, 5, 3) );
    exec( action(OBSTACLE, 5, 4) );
    exec( action(OBSTACLE, 5, 5) );
    exec( action(OBSTACLE, 6, 1) );
    exec( action(OBSTACLE, 6, 5) );
    exec( action(OBSTACLE, 7, 1) );
    exec( action(OBSTACLE, 7, 3) );
    exec( action(OBSTACLE, 7, 5) );
    exec( action(OBSTACLE, 8, 1) );
    exec( action(OBSTACLE, 8, 3) );
    exec( action(OBSTACLE, 8, 4) );
    exec( action(OBSTACLE, 8, 5) );
    exec( action(OBSTACLE, 10, 1) );
    exec( action(OBSTACLE, 10, 2) );
    exec( action(OBSTACLE, 10, 3) );
    exec( action(OBSTACLE, 10, 5) );
}

<<<<<<< HEAD
void rgl_moveIndefinitely() {
    while (not detectDirection(0)) {
=======
void rgl_tomato(int y) {
    if (y < 5) {
        rgl_tomato(y + 1);
        exec( action(ROTATE, angleActual() + 90) );
>>>>>>> fbb9f8e8bb82f275ccc6572508ecc44769ff55c8
        exec( action(MOVE_FORWARD, 1) );
    }
}

<<<<<<< HEAD
void rgl_spyral(int x, int y, int angle) {
    if (R.getX() != x or R.getZ() != y) {
        exec( action(ROTATE, angleActual() + angle) );
        rgl_moveIndefinitely();
        rgl_spyral(x, y, angle);
=======
void actions() {
    int a = 6;
    int z = 3;
    R = robot(a, z, 0);
    exec( action(MOVE, 6, 3) );
    rgl_tomato(1);
    int i = 0;
    while (i < 10) {
        exec( action(MARK, 1, i) );
        exec( action(BOX, 9, i) );
        i = i + 1;
>>>>>>> fbb9f8e8bb82f275ccc6572508ecc44769ff55c8
    }
}

void actions() {
    int a = 3;
    rgl_buildMap();
    R = robot(4, 8, 180);
    exec( action(MOVE_FORWARD, 6) );
    rgl_spyral(4, 1, 90);
    exec( action(PICK_OBJECT) );
    exec( action(MARK, 4, 7) );
    rgl_spyral(4, 2, 270);
    exec( action(MOVE, 0, 4) );
    exec( action(ROTATE, angleActual() + 270) );
    exec( action(MOVE_FORWARD, 5) );
    exec( action(MOVE, 9, 2) );
    rgl_spyral(6, 4, 270);
    exec( action(ROTATE, 90) );
    exec( action(RELEASE_OBJECT) );
<<<<<<< HEAD
=======
    while (z < a) {
        z = z + 1;
        rgl_moveBackwards(1);
    }
    exec( action(MOVE, 6, 6) );
>>>>>>> fbb9f8e8bb82f275ccc6572508ecc44769ff55c8
    finish = true;
}
